---
import Layout from '../../layouts/Layout.astro';
import GlobalHeader from '../../components/GlobalHeader.astro';
---

<Layout>
  <section class="pt-16">
    <GlobalHeader />
    <div class="grid grid-cols-1 gap-4 mb-8 pt-16">
      <h1 class="text-5xl mb-8">お問い合わせ</h1>
      <p class="mb-4">
        以下のフォームからお気軽にお問い合わせください。
        XやFacebookなどでお問い合わせいただくことも可能です。
      </p>
    </div>

    <form id="contact-form" class="flex flex-col gap-6 max-w-2xl">
      <div class="flex flex-col gap-2">
        <label for="name" class="font-medium">お名前</label>
        <input
          type="text"
          id="name"
          name="name"
          required
          class="px-4 py-2 border border-black dark:border-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-800"
        />
      </div>

      <div class="flex flex-col gap-2">
        <label for="email" class="font-medium">メールアドレス</label>
        <input
          type="email"
          id="email"
          name="email"
          required
          class="px-4 py-2 border border-black dark:border-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-800"
        />
      </div>

      <div class="flex flex-col gap-2">
        <label for="subject" class="font-medium">件名（任意）</label>
        <input
          type="text"
          id="subject"
          name="subject"
          class="px-4 py-2 border border-black dark:border-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-800"
        />
      </div>

      <div class="flex flex-col gap-2">
        <label for="message" class="font-medium">お問い合わせ内容</label>
        <textarea
          id="message"
          name="message"
          rows="6"
          required
          class="px-4 py-2 border border-black dark:border-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-800"
        ></textarea>
      </div>

      <div class="flex items-center gap-2">
        <button
          type="submit"
          class="px-6 py-2 bg-black text-white hover:bg-gray-600 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
        >
          送信
        </button>
        <p id="form-status" class="hidden"></p>
      </div>
    </form>
  </section>
</Layout>

<script>
  const form = document.getElementById('contact-form') as HTMLFormElement;
  const formStatus = document.getElementById(
    'form-status'
  ) as HTMLParagraphElement;

  if (form && formStatus) {
    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      // 送信中の表示
      formStatus.textContent = '送信中...';
      formStatus.className = 'text-blue-500';
      formStatus.classList.remove('hidden');

      const formData = new FormData(form);
      const data = Object.fromEntries(formData.entries());

      try {
        const response = await fetch('/api/contact', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data),
        });

        const result = await response.json();

        if (response.ok) {
          // 成功メッセージの表示
          formStatus.textContent =
            'お問い合わせを受け付けました。ありがとうございます。';
          formStatus.className = 'text-green-500';
          form.reset();
        } else {
          // エラーメッセージの表示
          formStatus.textContent = `エラーが発生しました: ${
            result.error || '不明なエラー'
          }`;
          formStatus.className = 'text-red-500';
        }
      } catch (error) {
        // エラーメッセージの表示
        formStatus.textContent =
          'サーバーとの通信中にエラーが発生しました。時間をおいて再度お試しください。';
        formStatus.className = 'text-red-500';
        console.error('Error submitting form:', error);
      }
    });
  }
</script>
